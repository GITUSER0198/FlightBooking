{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/airline/add-airline/add-airline.component.ts","webpack:///src/app/airline/add-airline/add-airline.component.html","webpack:///src/app/airline/airline-details/airline-details.component.ts","webpack:///src/app/airline/airline-details/airline-details.component.html","webpack:///src/app/airline/airline.component.ts","webpack:///src/app/airline/airline.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/appModules/lang-translate/lang-translate.module.ts","webpack:///src/app/dashboard-student/dashboard-student.component.ts","webpack:///src/app/dashboard-student/dashboard-student.component.html","webpack:///src/app/dashboard/add-passenger/add-passenger.component.ts","webpack:///src/app/dashboard/add-passenger/add-passenger.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/edit-passenger/edit-passenger.component.ts","webpack:///src/app/dashboard/edit-passenger/edit-passenger.component.html","webpack:///src/app/dashboard/passenger-details/passenger-details.component.ts","webpack:///src/app/dashboard/passenger-details/passenger-details.component.html","webpack:///src/app/display-data/display-data.component.ts","webpack:///src/app/display-data/display-data.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register-form/register-form.component.ts","webpack:///src/app/register-form/register-form.component.html","webpack:///src/app/services/airline-loader.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/validations.service.ts","webpack:///src/app/shared/footer/contact-us-page/contact-us-page.component.ts","webpack:///src/app/shared/footer/contact-us-page/contact-us-page.component.html","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/types/FlightSchedule.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddAirlineComponent","fb","activeModal","dataService","addAirlineForm","createAddAirlineForm","patchValue","name","sessionStorage","getItem","group","required","country","slogan","headQuaters","website","established","controls","postAirlineData","value","onSubmit","selector","templateUrl","styleUrls","AirlineDetailsComponent","AirlineComponent","airlineLoader","modalService","airlines","filteredAirlines","setTimeout","airline","modalRef","open","componentInstance","console","log","filter","res","toString","match","toLocaleLowerCase","event","target","addAirline","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","translate","title","addLangs","browserLang","getBrowserLang","use","getDefaultLang","initApp","dataLoader","loadAirlineData","AppModule","provide","useFactory","deps","multi","confirmButtonType","declarations","providers","bootstrap","HttpLoaderFactory","http","prefix","suffix","LangTranslateModule","loader","DashboardStudentComponent","tstr","records","invalidFile","$event","file","srcElement","files","sumOfAllFlightPassengers","isValidCSVFile","populateCSVData","isValidExcelFile","populateExcelData","alert","fileReset","fileReader","FileReader","readAsArrayBuffer","onload","arrayBuffer","result","data","Uint8Array","arr","Array","i","length","String","fromCharCode","bstr","join","workbook","type","first_sheet_name","SheetNames","worksheet","Sheets","recordsArray","sheet_to_json","header","allRecords","curruntRecord","headerLength","Object","excelRecord","airlineName","iata","icao","active","totalPassengers","Number","parseInt","push","showInvalidFileError","reader","readAsText","csvData","csvRecordsArray","split","headersRow","getHeaderArray","getDataRecordsArrayFromCSVFile","onerror","csvArr","csvRecord","trim","error","endsWith","csvRecordsArr","headers","headerArray","j","nativeElement","uploadListener","AddPassengerComponent","addPassengerForm","createAddPassengerForm","trips","postPassengerData","DashboardComponent","loadPassengerData","passengers","_id","filteredPassengers","subscribe","passenger","subject","deletePassenger","forEach","element","Blob","autoBom","addPassenger","EditPassengerComponent","editPassengerForm","createEditPassengerForm","passengerData","updatePassengerData","PassengerDetail","DisplayDataComponent","registerFormData","getFormDataFromService","AuthGuard","authService","router","next","state","isUserLoggedIn","navigate","providedIn","HomeComponent","LoginComponent","auth","notification","userService","loginForm","createLoginForm","getUserDetails","username","password","user","authenticate","success","timeOut","profession","login","RegisterFormComponent","customValidator","dataServce","professions","registerForm","createRegisterForm","email","mobile","pattern","compose","patternValidator","confirmPassword","validator","MatchPassword","valid","setFormData","registerUser","AirlineLoaderService","AIRLINE_BASE_URL","isLoad","$airlineData","get","pipe","AuthService","users","find","setItem","removeItem","DataService","STUDENT_BASE_URL","PASSENGER_BASE_URL","selectedAirline","values","passsengerData","post","dismissAll","err","airlineData","message","put","UserService","USER_BASE_URL","userData","checkIfDuplicateUser","saveToFile","x","ValidationsService","control","regex","RegExp","test","invalidPassword","formGroup","passwordControl","confirmPasswordControl","errors","passwordMismatch","setErrors","ContactUsPageComponent","ContactusForm","createContactUsForm","reset","FooterComponent","HeaderComponent","loggedin","isAdmin","opened","isUserAdmin","lang","setDefaultLang","logOut","document","getElementById","style","width","openNav","changeLang","closeNav","FlightSchedule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-add-airline',\n  templateUrl: './add-airline.component.html',\n  styleUrls: ['./add-airline.component.css']\n})\nexport class AddAirlineComponent implements OnInit {\n\n  addAirlineForm: FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    public activeModal: NgbActiveModal,\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n    this.addAirlineForm = this.createAddAirlineForm();\n    this.addAirlineForm.patchValue({\n      name:sessionStorage.getItem('username')\n    })\n  }\n  createAddAirlineForm(){\n    return this.fb.group({\n      id: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      country: [''],\n      slogan: [''],\n      headQuaters: [''],\n      website: [''],\n      established: ['']\n    });\n  }\n  get addAirlineFormControl(){\n    return this.addAirlineForm.controls;\n  }\n  onSubmit(){\n    this.dataService.postAirlineData(this.addAirlineForm.value);\n  }\n}\n","<div class=\"modal-header\">\n  <h6 class=\"modal-title\">New Airline Details! </h6>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<div class=\"modal-body\">\n      <form [formGroup]=\"addAirlineForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            ID:<input type=\"number\" id=\"id\" class=\"form-control\" formControlName=\"id\" >\n            <span class=\"text-danger\"\n            *ngIf=\"(addAirlineFormControl.id.touched ) && addAirlineFormControl.id.errors?.required\">\n              ID is required\n            </span>\n          </div>\n          <div class=\"form-group\">\n            Name:<input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\" >\n            <span class=\"text-danger\"\n            *ngIf=\"(addAirlineFormControl.name.touched ) && addAirlineFormControl.name.errors?.required\">\n              Name is required\n            </span>\n          </div>\n          <div class=\"form-group\">\n            Country:<input type=\"text\" id=\"country\" class=\"form-control\" formControlName=\"country\" >\n          </div>\n          <div class=\"form-group\">\n            Slogan:<input type=\"text\" id=\"slogan\" class=\"form-control\" formControlName=\"slogan\" >\n          </div>\n          <div class=\"form-group\">\n            HeadQuaters:<input type=\"text\" id=\"headQuaters\" class=\"form-control\" formControlName=\"headQuaters\" >\n          </div>\n          <div class=\"form-group\">\n            Website:<input type=\"text\" id=\"website\" class=\"form-control\" formControlName=\"website\" >\n          </div>\n          <div class=\"form-group\">\n            Established:<input type=\"number\" id=\"established\" class=\"form-control\" formControlName=\"established\" >\n          </div>\n          <div class=\"form-group\">\n            <button class=\"btn btn-danger btn-block\" [disabled]=\"addAirlineForm.invalid\">Submit</button>\n          </div>\n      </form>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Airline } from 'src/app/types/airline';\n\n@Component({\n  selector: 'app-airline-details',\n  templateUrl: './airline-details.component.html',\n  styleUrls: ['./airline-details.component.css']\n})\nexport class AirlineDetailsComponent implements OnInit {\n\n  constructor(public activeModal: NgbActiveModal) { }\n   airline: Airline;\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Airline Details! </h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<div class=\"modal-body\">\n  <img [src]=\"airline.logo\" alt=\"\" [class]=\"'flag flag-'\" width=\"90px\"  >\n\n  <div class=\"md-form\">\n    ID:<input type=\"text\" id=\"airlineId\" class=\"form-control\" [value]=\"airline.id\" disabled>\n  </div>\n  <div class=\"md-form\">\n    Name:<input type=\"text\" id=\"airlineName\" class=\"form-control\" [value]=\"airline.name\" disabled>\n  </div>\n  <div class=\"md-form\">\n    Country:<input type=\"text\" id=\"airlineCountry\" class=\"form-control\" [value]=\"airline.country\" disabled>\n  </div>\n  <div class=\"md-form\">\n    Slogan:<input type=\"text\" id=\"airlineSlogan\" class=\"form-control\" [value]=\"airline.slogan\" disabled>\n  </div>\n  <div class=\"md-form\">\n    Website:<input type=\"text\" id=\"airlineWebsite\" class=\"form-control\" [value]=\"airline.website\" disabled>\n  </div>\n\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\n</div>\n\n","import { Component, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Table } from 'primeng/table';\nimport { AirlineLoaderService } from '../services/airline-loader.service';\nimport { AddAirlineComponent } from './add-airline/add-airline.component';\nimport { AirlineDetailsComponent } from './airline-details/airline-details.component';\nimport {Airline} from '../types/airline'\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-airline',\n  templateUrl: './airline.component.html',\n  styleUrls: ['./airline.component.css']\n})\nexport class AirlineComponent implements OnInit {\n\n  airlines:Airline[];\n  filteredAirlines;\n  id;\n  name;\n  country;\n  slogan;\n  website;\n\n  @ViewChild('table') table: Table;\n\n  constructor(\n    private airlineLoader: AirlineLoaderService,\n    private modalService: NgbModal) {\n\n     }\n\n  ngOnInit(): void {\n\n\n    this.airlines = this.airlineLoader.airlines;\n    this.filteredAirlines=this.airlines;\n\n    setTimeout(() => {\n\n      if(!this.airlines){\n        this.airlines = [\n          {id: 1, name: 'Dummy data', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 2, name: 'a2', country: 'Quatar', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 1, name: 'a1', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 2, name: 'a2', country: 'Quatar', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 1, name: 'a1', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 2, name: 'a2', country: 'Quatar', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 1, name: 'a1', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 2, name: 'a2', country: 'Quatar', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 1, name: 'a1', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 2, name: 'a2', country: 'Quatar', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 1, name: 'a1', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 2, name: 'a2', country: 'Quatar', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 1, name: 'a1', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 2, name: 'a2', country: 'Quatar', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 1, name: 'a1', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 2, name: 'a2',\n           country: 'Quatar', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'},\n          {id: 1, name: 'a1', country: 'Thailand', slogan: 'Smooth as Silk / I Fly THAI', website: 'www.thaiairways.com'}];\n          this.filteredAirlines=this.airlines;\n          // this.tstr.error('','API Down using dummy data!');\n      }\n\n    }, 1000);\n\n\n\n\n\n\n  }\n\n  openNewForm(airline){\n    const modalRef = this.modalService.open(AirlineDetailsComponent);\n    modalRef.componentInstance.airline = airline;\n  }\n\n  addAirline(){\n    const modalRef = this.modalService.open(AddAirlineComponent);\n\n  }\n\n    searchId(){\n      console.log(this.airlines[0]);\n      if(this.id===\"\"){\n        this.filteredAirlines=this.airlines;\n      }\n      else{\n        this.filteredAirlines=this.airlines.filter(res=>{\n        //   console.log(res.id.toString());\n        //   console.log(this.id);\n\n          return res.id?.toString().match(this.id.toLocaleLowerCase());\n        })\n      }\n    }\n    searchName(){\n      if(this.name===\"\"){\n        this.filteredAirlines=this.airlines;\n      }\n      else{\n        this.filteredAirlines=this.airlines.filter(res=>{\n          return res.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n        })\n      }\n    }\n    searchCountry(){\n      if(this.country===\"\"){\n        this.filteredAirlines=this.airlines;\n      }\n      else{\n        this.filteredAirlines=this.airlines.filter(res=>{\n          return res.country?.toLocaleLowerCase().match(this.country.toLocaleLowerCase());\n        })\n      }\n    }\n    searchSlogan(){\n      if(this.slogan===\"\"){\n        this.filteredAirlines=this.airlines;\n      }\n      else{\n        this.filteredAirlines=this.airlines.filter(res=>{\n          return res.slogan?.toLocaleLowerCase().match(this.slogan.toLocaleLowerCase());\n        })\n      }\n    }\n    searchWebsite(){\n      if(this.website===\"\"){\n        this.filteredAirlines=this.airlines;\n      }\n      else{\n        this.filteredAirlines=this.airlines.filter(res=>{\n          return res.website?.toLocaleLowerCase().match(this.website.toLocaleLowerCase());\n        })\n      }\n    }\n\n\n    clearOthers(event){\n      this.filteredAirlines=this.airlines;\n      if(event.target.id==='airlineId'){\n        this.name='';\n        this.slogan='';\n        this.country='';\n        this.website='';\n      }\n      if(event.target.id==='airlineName'){\n        this.id='';\n        this.slogan='';\n        this.country='';\n        this.website='';\n      }\n      if(event.target.id==='airlineSlogan'){\n        this.id='';\n        this.name='';\n        this.country='';\n        this.website='';\n      }\n\n      if(event.target.id==='airlineCountry'){\n        this.id='';\n        this.name='';\n        this.slogan='';\n        this.website='';\n      }\n      if(event.target.id==='airlineWebsite'){\n        this.id='';\n        this.name='';\n        this.slogan='';\n        this.country='';\n      }\n\n    }\n\n}\n"," <div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12 mx-auto\">\n      <br> <br>\n        <div class=\"card\">\n          <div class=\"card-header text-center\">\n            <p>Admin dashboard!</p>\n            <h3>Airlines</h3>\n            <div>\n              <p-button label=\"Add\" icon=\"pi pi-plus\" (click)=\"addAirline()\"></p-button>\n            </div>\n          </div>\n          <div class=\"card-body text-center\" *ngIf=\"!filteredAirlines\">\n            <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\n          </div>\n          <div class=\"card-body\" *ngIf=\"filteredAirlines\">\n            <p-table #table [value]=\"filteredAirlines\" [paginator]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\" responsiveLayout=\"scroll\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [rowsPerPageOptions]=\"[10,25,50]\">\n                      <ng-template pTemplate=\"header\">\n                        <tr>\n                          <td>\n                            <input  type=\"text\" [(ngModel)]=\"id\"  (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchId()\" style=\"width: 178px;\" placeholder=\"Search id\" id=\"airlineId\"/>\n                          </td>\n                          <td>\n                            <input  type=\"text\" [(ngModel)]=\"name\"  (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchName()\" style=\"width: 178px;\" placeholder=\"Search name\" id=\"airlineName\" />\n                          </td>\n                          <td>\n                            <input  type=\"text\" [(ngModel)]=\"country\" (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchCountry()\" style=\"width: 178px;\" placeholder=\"Search country\"  id=\"airlineCountry\"/>\n                          </td>\n                          <td>\n                            <input  type=\"text\" [(ngModel)]=\"slogan\" (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchSlogan()\" style=\"width: 178px;\" placeholder=\"Search slogan\" id=\"airlineSlogan\"/>\n                          </td>\n                          <td>\n                            <input  type=\"text\" [(ngModel)]=\"website\" (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchWebsite()\" style=\"width: 178px;\" placeholder=\"Search website\" id=\"airlineWebsite\"/>\n                          </td>\n                        </tr>\n\n\n                    <tr>\n                        <th pSortableColumn=\"id\" style=\"width: 7rem;\">ID <p-sortIcon field=\"id\"></p-sortIcon></th>\n                        <th pSortableColumn=\"name\" style=\"width: 15rem;\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n                        <th pSortableColumn=\"country\" style=\"width: 10rem;\">Country <p-sortIcon field=\"country\"></p-sortIcon></th>\n                        <th pSortableColumn=\"slogan\">Slogan <p-sortIcon field=\"slogan\"> Slogan</p-sortIcon></th>\n                        <th pSortableColumn=\"website\">Website <p-sortIcon field=\"website\">Website</p-sortIcon></th>\n\n                      </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-airline>\n                    <tr class=\"record\" (click)=\"openNewForm(airline)\">\n                        <td>{{airline.id}}</td>\n                        <td>\n                          <img [src]=\"airline.logo\" alt=\"\" [class]=\"'flag flag-'\" height=\"15px\"  >\n                          <span>{{airline.name}}</span>\n                        </td>\n                        <td>{{airline.country}}</td>\n                        <td>{{airline.slogan}}</td>\n                        <td>{{airline.website}}</td>\n\n                      </tr>\n                </ng-template>\n                <ng-template pTemplate=\"paginatorright\">\n                </ng-template>\n            </p-table>\n          </div>\n        </div>\n    </div>\n  </div>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AirlineComponent } from './airline/airline.component';\nimport { DashboardStudentComponent } from './dashboard-student/dashboard-student.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DisplayDataComponent } from './display-data/display-data.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { LoginComponent } from './login/login.component';\nimport { ContactUsPageComponent } from './shared/footer/contact-us-page/contact-us-page.component';\n\n\nexport const routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'input', component: RegisterFormComponent },\n  { path: 'display', component: DisplayDataComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'dashboard-student', component: DashboardStudentComponent, canActivate: [AuthGuard] },\n  {path: 'airline', component: AirlineComponent, canActivate: [AuthGuard]},\n  {path:'contact-us',component:ContactUsPageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AfterViewChecked, Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n\n  title = 'Form1';\n  constructor(public translate: TranslateService) {\n    translate.addLangs(['de', 'en']);\n    const browserLang = this.getBrowserLang();\n    translate.use(browserLang.match(/en|de/) ? browserLang : 'en');\n\n  }\n\n\n\n  getBrowserLang() {\n    return this.translate.getDefaultLang() || 'en';\n  }\n\n}\n","\n\n\n<div class=\"header\">\n  <app-header></app-header>\n</div>\n\n\n\n<div class=\"body\" role=\"main\">\n  <router-outlet></router-outlet>\n</div>\n<div class=\"footer\">\n  <app-footer></app-footer>\n</div>\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {  FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DisplayDataComponent } from './display-data/display-data.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { LangTranslateModule } from './appModules/lang-translate/lang-translate.module';\nimport { DashboardStudentComponent } from './dashboard-student/dashboard-student.component';\nimport { AirlineComponent } from './airline/airline.component';\nimport { AirlineLoaderService } from './services/airline-loader.service';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule } from 'primeng/button';\nimport { AirlineDetailsComponent } from './airline/airline-details/airline-details.component';\nimport { PassengerDetail } from './dashboard/passenger-details/passenger-details.component';\nimport { AddPassengerComponent } from './dashboard/add-passenger/add-passenger.component';\nimport { AddAirlineComponent } from './airline/add-airline/add-airline.component';\nimport { EditPassengerComponent } from './dashboard/edit-passenger/edit-passenger.component';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\nimport { KeyFilterModule } from 'primeng';\nimport { ContactUsPageComponent } from './shared/footer/contact-us-page/contact-us-page.component';\n\n\nexport function initApp(dataLoader: AirlineLoaderService) {\n  return () => dataLoader.loadAirlineData();\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterFormComponent,\n    DisplayDataComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent,\n    DashboardStudentComponent,\n    AirlineComponent,\n    AirlineDetailsComponent,\n    PassengerDetail,\n    AddPassengerComponent,\n    AddAirlineComponent,\n    EditPassengerComponent,\n    ContactUsPageComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    LangTranslateModule,\n    ButtonModule,\n    TableModule,\n    ConfirmationPopoverModule.forRoot({\n      confirmButtonType:'danger'\n    }),\n  ],\n  providers: [\n     {provide: APP_INITIALIZER, useFactory: initApp, deps: [AirlineLoaderService], multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { MultiTranslateHttpLoader } from 'ngx-translate-multi-http-loader';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new MultiTranslateHttpLoader(http, [\n    { prefix: './assets/translate/shared/header/', suffix: '.json' }\n  ]);\n}\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  exports: [\n    HttpClientModule,\n    TranslateModule\n  ]\n})\nexport class LangTranslateModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {FlightSchedule} from '../types/FlightSchedule';\nimport * as XLSX from 'xlsx';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-dashboard-student',\n  templateUrl: './dashboard-student.component.html',\n  styleUrls: ['./dashboard-student.component.css']\n})\nexport class DashboardStudentComponent implements OnInit {\n\n  public records: any[] = null;\n  file:File;\n  arrayBuffer:any;\n  sumOfAllFlightPassengers:number;\n  invalidFile=false;\n\n  @ViewChild('reader') reader: any;\n  constructor(private tstr:ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  uploadListener($event: any): void {\n    console.log($event);\n    let file = $event.srcElement.files[0];\n    if(file){\n      this.sumOfAllFlightPassengers=0;\n      this.invalidFile=false;\n    }\n    if (this.isValidCSVFile(file)) {\n      this.populateCSVData(file);\n\n    } else if(this.isValidExcelFile(file)){\n      this.populateExcelData(file);\n    }\n    else{\n      alert(\"Please import valid .csv or xlsx file.\");\n      this.fileReset();\n    }\n  }\n\n  populateExcelData(file)\n  {\n\n  this.file=file;\n  let fileReader = new FileReader();\n  fileReader.readAsArrayBuffer(this.file);\n  fileReader.onload = (e) => {\n      this.arrayBuffer = fileReader.result;\n      var data = new Uint8Array(this.arrayBuffer);\n      var arr = new Array();\n      for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);\n      var bstr = arr.join(\"\");\n      var workbook = XLSX.read(bstr, {type:\"binary\"});\n      var first_sheet_name = workbook.SheetNames[0];\n      var worksheet = workbook.Sheets[first_sheet_name];\n      let recordsArray = XLSX.utils.sheet_to_json(worksheet,{header:1});\n\n      let allRecords=[];\n\n      for (let i = 0; i < recordsArray.length; i++) {\n        let curruntRecord = recordsArray[i];\n        let headerLength=7;\n        if (Object.keys(curruntRecord).length == headerLength) {\n          let excelRecord:FlightSchedule = new FlightSchedule();\n          excelRecord.id = curruntRecord[0];\n          excelRecord.airlineName = curruntRecord[1];\n          excelRecord.iata = curruntRecord[2];\n          excelRecord.icao = curruntRecord[3];\n          excelRecord.country = curruntRecord[4];\n          excelRecord.active = curruntRecord[5];\n          excelRecord.totalPassengers=curruntRecord[6];\n          this.sumOfAllFlightPassengers+=Number.parseInt(excelRecord.totalPassengers);\n          allRecords.push(excelRecord);\n        }\n        else{\n          this.showInvalidFileError();\n        }\n      }\n    this.records=allRecords;\n\n  }\n}\n\n\n    populateCSVData(file){\n      let reader = new FileReader();\n      reader.readAsText(file);\n\n      reader.onload = () => {\n        let csvData = reader.result;\n        let csvRecordsArray = (<string>csvData).split(/\\r\\n|\\n/);\n\n        let headersRow = this.getHeaderArray(csvRecordsArray);\n\n        this.records = this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length);\n\n      };\n\n      reader.onerror = function () {\n        console.log('error is occured while reading file!');\n      };\n\n    }\n\n  getDataRecordsArrayFromCSVFile(csvRecordsArray: any, headerLength: any) {\n    let csvArr = [];\n\n    for (let i = 0; i < csvRecordsArray.length; i++) {\n      let curruntRecord = (<string>csvRecordsArray[i]).split(',');\n        if (curruntRecord.length == headerLength) {\n          let csvRecord:FlightSchedule = new FlightSchedule();\n          csvRecord.id = curruntRecord[0].trim();\n          csvRecord.airlineName = curruntRecord[1].trim();\n          csvRecord.iata = curruntRecord[2].trim();\n          csvRecord.icao = curruntRecord[3].trim();\n          csvRecord.country = curruntRecord[4].trim();\n          csvRecord.active = curruntRecord[5].trim();\n          csvRecord.totalPassengers=curruntRecord[6].trim();\n          this.sumOfAllFlightPassengers+=Number.parseInt(csvRecord.totalPassengers);\n\n          csvArr.push(csvRecord);\n        }\n        else{\n          this.showInvalidFileError();\n        }\n\n\n    }\n    return csvArr;\n  }\n\n  showInvalidFileError(){\n    this.invalidFile=true;\n    this.tstr.error('','Uploaded file is invalid!');\n  }\n\n  isValidCSVFile(file: any) {\n    return file.name.endsWith(\".csv\");\n  }\n\n  isValidExcelFile(file: any) {\n    return file.name.endsWith(\".xlsx\")\n  }\n\n  getHeaderArray(csvRecordsArr: any) {\n    let headers = (<string>csvRecordsArr[0]).split(',');\n    let headerArray = [];\n    for (let j = 0; j < headers.length; j++) {\n      headerArray.push(headers[j]);\n    }\n    return headerArray;\n  }\n\n  fileReset() {\n    this.reader.nativeElement.value = \"\";\n    this.records = [];\n  }\n\n}\n","<div  class=\"student\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-header text-center\">\n              <p>Student dashboard!</p>\n              <h4>Flight schedule</h4>\n              <div>\n\n                <div class=\"custom-file\" style=\"width: 28%;\">\n                  <input type=\"file\" class=\"custom-file-input\"  #reader name=\"Upload CSV\" id=\"txtFileUpload\" (change)=\"uploadListener($event)\" accept=\".csv,.xlsx\"  >\n                  <label class=\"custom-file-label\" for=\"txtFileUpload\">Choose file</label>\n                </div>\n                <div class=\"error\" *ngIf=\"invalidFile\">\n                  Please select valid file\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-body\" >\n              <div  *ngIf=\"!records\">\n                <h4>Please select a file to load data</h4>\n              </div>\n\n              <div *ngIf=\"records\">\n                <p-table #table [value]=\"records\" [paginator]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\" responsiveLayout=\"scroll\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [rowsPerPageOptions]=\"[10,25,50]\">\n                      <ng-template pTemplate=\"header\">\n\n                    <tr>\n                        <th pSortableColumn=\"id\" style=\"width: 7rem;\">Flight ID <p-sortIcon field=\"id\"></p-sortIcon></th>\n                        <th pSortableColumn=\"airlineName\" style=\"width: 10rem;\">Airline Name <p-sortIcon field=\"airlineName\"></p-sortIcon></th>\n                        <th pSortableColumn=\"iata\" >IATA <p-sortIcon field=\"iata\"></p-sortIcon></th>\n                        <th pSortableColumn=\"icao\">ICAO <p-sortIcon field=\"icao\"> </p-sortIcon></th>\n                        <th pSortableColumn=\"country\">Country <p-sortIcon field=\"country\"> </p-sortIcon></th>\n                        <th pSortableColumn=\"active\">Active <p-sortIcon field=\"active\"> </p-sortIcon></th>\n                        <th pSortableColumn=\"totalPassengers\" style=\"width: 10rem;\">Passengers <p-sortIcon field=\"totalPassengers\"> </p-sortIcon></th>\n\n\n                      </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-flightSchedule>\n                    <tr class=\"record\">\n                        <td>{{flightSchedule.id}}</td>\n                        <td>\n                          <span>{{flightSchedule.airlineName}}</span>\n                        </td>\n                        <td>{{flightSchedule.iata}}</td>\n                        <td>{{flightSchedule.icao}}</td>\n                        <td>{{flightSchedule.country}}</td>\n                        <td>{{flightSchedule.active}}</td>\n                        <td>{{flightSchedule.totalPassengers}}</td>\n                      </tr>\n                </ng-template>\n                <ng-template pTemplate=\"paginatorright\">\n                </ng-template>\n\n                </p-table>\n                  <div class=\"passengerSum\">\n                    Total : {{sumOfAllFlightPassengers}}\n                  </div>\n              </div>\n            </div>\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-add-passenger',\n  templateUrl: './add-passenger.component.html',\n  styleUrls: ['./add-passenger.component.css']\n})\nexport class AddPassengerComponent implements OnInit {\n\n  addPassengerForm: FormGroup;\n  constructor(\n    public activeModal: NgbActiveModal,\n    private fb: FormBuilder,\n    private dataService: DataService\n    ) { }\n\n  ngOnInit(): void {\n  this.addPassengerForm = this.createAddPassengerForm();\n  this.addPassengerForm.patchValue({\n    name:sessionStorage.getItem('username')\n  })\n  }\n  createAddPassengerForm(){\n    return this.fb.group({\n      name: ['', [Validators.required]],\n      trips: ['', [Validators.required]],\n      airline: ['', [Validators.required]]\n\n    });\n  }\n  get addPassengerFormControl() {\n    return this.addPassengerForm.controls;\n  }\n  onSubmit(){\n    this.dataService.postPassengerData(this.addPassengerForm.value);\n  }\n\n\n}\n","<div class=\"modal-header\">\n  <h6 class=\"modal-title\">New Passenger Details! </h6>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<div class=\"modal-body\">\n      <form [formGroup]=\"addPassengerForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            Name:<input type=\"text\" id=\"passengerName\" class=\"form-control\" formControlName=\"name\" >\n            <span class=\"text-danger\"\n            *ngIf=\"(addPassengerFormControl.name.touched ) && addPassengerFormControl.name.errors?.required\">\n              Name is required\n            </span>\n          </div>\n          <div class=\"form-group\">\n            Trips:<input type=\"number\" id=\"passengerTrips\" class=\"form-control\" formControlName=\"trips\">\n            <span class=\"text-danger\"\n            *ngIf=\"(addPassengerFormControl.trips.touched ) && addPassengerFormControl.trips.errors?.required\">\n              Trips is required\n            </span>\n          </div>\n          <div class=\"form-group\">\n            Airline:<input type=\"number\" id=\"passsengerAirline\" class=\"form-control\" formControlName=\"airline\">\n            <span class=\"text-danger\"\n            *ngIf=\"(addPassengerFormControl.airline.touched ) && addPassengerFormControl.airline.errors?.required\">\n              Airline is required\n            </span>\n          </div>\n          <div class=\"form-group\">\n            <button class=\"btn btn-danger btn-block\" [disabled]=\"addPassengerForm.invalid\">Submit</button>\n          </div>\n      </form>\n</div>\n\n","import { AfterViewChecked, Component, OnInit, TrackByFunction } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataService } from '../services/data.service';\nimport { Passenger } from '../types/passenger';\nimport { PassengerResponse } from '../types/passengerResponse';\nimport { Student } from '../types/student';\nimport { AddPassengerComponent } from './add-passenger/add-passenger.component';\nimport { EditPassengerComponent } from './edit-passenger/edit-passenger.component';\nimport { PassengerDetail } from './passenger-details/passenger-details.component';\nimport * as FileSaver from 'file-saver';\n// import 'bootstrap';\n// import * as $ from 'jquery';\n// import { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n\n  passengers: Passenger[];\n  filteredPassengers;\n  confirmClicked;\n  id;\n  name;\n  trips;\n  airline;\n  constructor(\n    private dataService: DataService,\n    private modalService: NgbModal\n    ) { }\n\n  ngOnInit(): void {\n     this.loadPassengerData();\n\n\n      setTimeout(() => {\n        if(!this.passengers){\n          this.passengers=[\n            {_id:1,name:\"dummy data\",trips:20,airline:[{id:10}]},\n            {_id:2,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:3,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:4,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:5,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:6,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:7,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:8,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:9,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:10,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:11,name:\"asd\",trips:20,airline:[{id:10}]},\n            {_id:12,name:\"asd\",trips:20,airline:[{id:10}]},\n          ];\n        }\n      }, 1000);\n\n        // this.tstr.error('','API Down using dummy data!');\n\n     this.filteredPassengers=this.passengers;\n    }\n\n  // ngAfterViewChecked(){\n  //   $(function () {\n  //     $('[data-toggle=\"tooltip\"]').tooltip()\n  //       })\n  // }\n\n  loadPassengerData(){\n    this.dataService.loadPassengerData().subscribe(\n      (res:PassengerResponse) => {\n         this.passengers = res.data;\n         this.filteredPassengers=this.passengers;\n      }\n    );\n\n  }\n\n\n\n  showPassengerDetail(passenger:Passenger) {\n    const modalRef = this.modalService.open(PassengerDetail);\n    modalRef.componentInstance.passenger = passenger;\n\n  }\n\n  addPassenger(){\n    const modalRef = this.modalService.open(AddPassengerComponent);\n  }\n\n  editPassengerDetail(passenger:Passenger){\n    const modalRef = this.modalService.open(EditPassengerComponent);\n    modalRef.componentInstance.passenger = passenger;\n\n    this.dataService.subject.subscribe(data => {\n      if (data === 'Passenger|update'){\n        this.loadPassengerData();\n      }\n    });\n\n  }\n  deletePassenger(passenger: Passenger){\n    this.dataService.deletePassenger(passenger._id);\n    this.dataService.subject.subscribe(data => {\n      if (data === 'Passenger|delete'){\n        this.loadPassengerData();\n      }\n    });\n\n  }\n\n  searchId(){\n    if(this.id===\"\"){\n      this.filteredPassengers=this.passengers;\n    }\n    else{\n      this.filteredPassengers=this.passengers.filter(res=>{\n        return res._id.toString().match(this.id.toLocaleLowerCase());\n      })\n    }\n  }\n  searchName(){\n    if(this.name===\"\"){\n      this.filteredPassengers=this.passengers;\n    }\n    else{\n      this.filteredPassengers=this.passengers.filter(res=>{\n        return res.name.toLocaleLowerCase().match(this.name.toLocaleLowerCase());\n      })\n    }\n  }\n\n    searchTrips(){\n      if(this.trips===\"\"){\n        this.filteredPassengers=this.passengers;\n      }\n      else{\n        this.filteredPassengers=this.passengers.filter(res=>{\n          return res.trips.toString().match(this.trips.toLocaleLowerCase());\n        })\n      }\n    }\n      searchAirline(){\n        if(this.airline===\"\"){\n          this.filteredPassengers=this.passengers;\n        }\n        else{\n          this.filteredPassengers=this.passengers.filter(res=>{\n            return res.airline[0].id.toString().match(this.airline);\n          })\n        }\n      }\n\n      clearOthers(event){\n        this.filteredPassengers=this.passengers;\n\n        if(event.target.id==='passengerId'){\n          this.name='';\n          this.trips='';\n          this.airline='';\n        }\n\n        if(event.target.id==='passengerName'){\n          this.id='';\n          this.trips='';\n          this.airline='';\n        }\n\n        if(event.target.id==='passengerTrips'){\n          this.id='';\n          this.name='';\n          this.airline='';\n        }\n        if(event.target.id==='passengerAirline'){\n          this.id='';\n          this.name='';\n          this.trips='';\n        }\n\n      }\n\n      downloadPassengerData(){\n        const data=[];\n        this.passengers.forEach(element => {\n          data.push(element._id+',');\n          data.push(element.airline[0].id+',');\n          data.push(element.name+',');\n          data.push(element.trips+'\\r\\n');\n        });\n\n         FileSaver.saveAs(new Blob(data, { type: 'text/plain;charset=utf-8' }), 'data.csv', { autoBom: false });\n\n      }\n\n}\n\n\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-10 mx-auto\">\n      <br> <br>\n        <div class=\"card\">\n          <div class=\"card-header text-center\">\n            <p>Admin dashboard!</p>\n            <h3>Passengers</h3>\n            <div>\n              <p-button label=\"Add\" icon=\"pi pi-plus\" (click)=\"addPassenger()\" ></p-button>\n            </div>\n          </div>\n          <div class=\"card-body text-center\" *ngIf=\"!filteredPassengers\">\n            <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\n\n          </div>\n           <div class=\"card-body\" *ngIf=\"filteredPassengers\">\n            <p-table #dt2 [value]=\"filteredPassengers\" [paginator]=\"true\" [rows]=\"10\" [showCurrentPageReport]=\"true\" responsiveLayout=\"scroll\"\n                currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [rowsPerPageOptions]=\"[10,25,50]\">\n                <ng-template pTemplate=\"header\">\n                  <tr>\n\n                    <td>\n                       <input  type=\"text\" [(ngModel)]=\"id\" (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchId()\" style=\"width: 146px;\" placeholder=\"Search Id\" id=\"passengerId\"/>\n                    </td>\n                    <td>\n                        <input  type=\"text\" [(ngModel)]=\"name\" (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchName()\" style=\"width: 146px;\" placeholder=\"Search name\" id=\"passengerName\"/>\n                    </td>\n                    <td>\n                        <input  type=\"text\" [(ngModel)]=\"trips\"  (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchTrips()\" style=\"width: 146px;\" placeholder=\"Search trips\" id=\"passengerTrips\"/>\n                    </td>\n                    <td>\n                        <input  type=\"text\" [(ngModel)]=\"airline\" (focus)=\"clearOthers($event)\" (ngModelChange)=\"searchAirline()\" style=\"width: 146px;\" placeholder=\"Search airline\" id=\"passengerAirline\" />\n                    </td>\n                    <td>\n\n                      <p-button label=\"Download\" icon=\"pi pi-download\n                      \" (click)=\"downloadPassengerData()\"></p-button>\n\n                    </td>\n                  </tr>\n\n\n\n                <tr>\n                  <th scope=\"col\" pSortableColumn=\"_id\" style=\"width: 5rem;\">ID <p-sortIcon field=\"guid\"></p-sortIcon></th>\n                  <th scope=\"col\" pSortableColumn=\"name\" style=\"width: 5rem;\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\n\n                  <th scope=\"col\" pSortableColumn=\"trips\" style=\"width: 5rem;\">Trips <p-sortIcon field=\"email\"></p-sortIcon></th>\n                  <th scope=\"col\" pSortableColumn=\"trips\" style=\"width: 5rem;\">Airline <p-sortIcon field=\"email\"></p-sortIcon></th>\n                  <th scope=\"col\"  style=\"width: 5rem;\">Actions </th>\n\n                </tr>\n\n              </ng-template>\n              <ng-template pTemplate=\"body\" let-passenger>\n                <tr class=\"record\" >\n                    <td (click)=\"showPassengerDetail(passenger)\" class=\"clickable\">{{passenger._id}}</td>\n                    <td (click)=\"showPassengerDetail(passenger)\" class=\"clickable\">\n                        {{passenger.name}}\n                    </td>\n                    <td (click)=\"showPassengerDetail(passenger)\" class=\"clickable\">{{passenger.trips}}</td>\n                    <td (click)=\"showPassengerDetail(passenger)\" class=\"clickable\">{{passenger.airline[0].id}}</td>\n\n                    <td>\n                      <i class=\"pi pi-pencil clickable\"  title=\"Edit\" (click)=\"editPassengerDetail(passenger)\"></i>\n                      <i class=\"pi pi-ban clickable\" title=\"Delete\"\n                      mwlConfirmationPopover\n                      popoverTitle=\"Are you sure?\"\n                      popoverMessage=\"Are you really sure you want to Delete?\"\n                      placement=\"right\"\n                      confirmText=\"Delete\"\n                      cancelText=\"Cancel\"\n                      (confirm)=\"deletePassenger(passenger)\"\n                      ></i>\n                    </td>\n\n                  </tr>\n            </ng-template>\n            <ng-template pTemplate=\"paginatorright\">\n            </ng-template>\n        </p-table>\n          </div>\n        </div>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataService } from 'src/app/services/data.service';\nimport { Passenger } from 'src/app/types/passenger';\n\n@Component({\n  selector: 'app-edit-passenger',\n  templateUrl: './edit-passenger.component.html',\n  styleUrls: ['./edit-passenger.component.css']\n})\nexport class EditPassengerComponent implements OnInit {\n\n  passenger: Passenger;\n\n  editPassengerForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private dataService: DataService,\n    public activeModal: NgbActiveModal\n\n  ) { }\n\n  ngOnInit(): void {\n    this.editPassengerForm = this.createEditPassengerForm();\n    this.editPassengerForm.patchValue({\n      id: this.passenger._id,\n      name: this.passenger.name,\n      trips: this.passenger.trips,\n      airline: this.passenger.airline[0].id\n    });\n\n  }\n\n\n  get editPassengerFormControl(){\n    return this.editPassengerForm.controls;\n  }\n\n  createEditPassengerForm(){\n    return this.fb.group({\n      id: [''],\n      name: ['', [Validators.required]],\n      trips: ['', [Validators.required]],\n      airline: ['', [Validators.required]]\n    });\n  }\n\n  onSubmit(){\n    const passengerData:Passenger = {\n      name: this.editPassengerForm.value.name,\n      airline: this.editPassengerForm.value.airline,\n      trips: this.editPassengerForm.value.trips\n    };\n    this.dataService.updatePassengerData(passengerData, this.editPassengerForm.value.id);\n\n  }\n\n}\n","<div class=\"modal-header\">\n  <h6 class=\"modal-title\">New Passenger Details! </h6>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<div class=\"modal-body\">\n      <form [formGroup]=\"editPassengerForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            ID:<input type=\"text\" id=\"passengerId\" class=\"form-control\" formControlName=\"id\" [attr.disabled]=\"true\" >\n          </div>\n          <div class=\"form-group\">\n            Name:<input type=\"text\" id=\"passengerName\" class=\"form-control\" formControlName=\"name\" >\n            <span class=\"text-danger\"\n            *ngIf=\"(editPassengerFormControl.name.touched ) && editPassengerFormControl.name.errors?.required\">\n              Name is required\n            </span>\n          </div>\n          <div class=\"form-group\">\n            Trips:<input type=\"number\" id=\"passengerTrips\" class=\"form-control\" formControlName=\"trips\">\n            <span class=\"text-danger\"\n            *ngIf=\"(editPassengerFormControl.trips.touched ) && editPassengerFormControl.trips.errors?.required\">\n              Trips is required\n            </span>\n          </div>\n          <div class=\"form-group\">\n            Airline:<input type=\"number\" id=\"passsengerAirline\" class=\"form-control\" formControlName=\"airline\">\n            <span class=\"text-danger\"\n            *ngIf=\"(editPassengerFormControl.airline.touched ) && editPassengerFormControl.airline.errors?.required\">\n              Airline is required\n            </span>\n          </div>\n          <div class=\"form-group\">\n            <button class=\"btn btn-danger btn-block\" [disabled]=\"editPassengerForm.invalid\">Submit</button>\n          </div>\n      </form>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Passenger } from 'src/app/types/passenger';\nimport { Student } from 'src/app/types/student';\n\n@Component({\n  selector: 'app-passenger-details',\n  templateUrl: './passenger-details.component.html',\n  styleUrls: ['./passenger-details.component.css']\n})\nexport class PassengerDetail implements OnInit {\n\n  constructor(public activeModal: NgbActiveModal) { }\n  passenger: Passenger;\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Passenger Details!</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\"></button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"md-form\">\n    ID:<input type=\"text\" id=\"passengerId\" class=\"form-control\" [value]=\"passenger._id\" disabled>\n  </div>\n  <div class=\"md-form\">\n    Name:<input type=\"text\" id=\"passengerName\" class=\"form-control\" [value]=\"passenger.name\" disabled>\n  </div>\n  <div class=\"md-form\">\n    Trips:<input type=\"text\" id=\"passengerEmail\" class=\"form-control\" [value]=\"passenger.trips\" disabled>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RegisterFormData } from '../types/RegisterFormData';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-display-data',\n  templateUrl: './display-data.component.html',\n  styleUrls: ['./display-data.component.css']\n})\nexport class DisplayDataComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  registerFormData: RegisterFormData;\n\n  ngOnInit(): void {\n    this.registerFormData = this.getFormDataFromService();\n  }\n\n  getFormDataFromService(): any {\n    return this.dataService.registerFormData;\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-md-8 mx-auto\">\n        <div class=\"card\">\n          <div class=\"card-header text-center\">\n            <h3>Form data</h3>\n         </div>\n         <div class=\"card-body\">\n          <div>\n          Name: {{this.registerFormData.name}}\n          </div>\n          <div>\n          Email: {{this.registerFormData.email}}\n          </div>\n          <div>\n          User Name: {{this.registerFormData.username}}\n          </div>\n          <div>\n            Mobile: {{this.registerFormData.mobile}}\n          </div>\n          <div>\n            Profession: {{this.registerFormData.profession}}\n          </div>\n          <button class=\"btn btn-danger btn-block\" routerLink=\"/input\" >Register</button>\n          <button class=\"btn btn-danger btn-block\" routerLink=\"/login\" >Login</button>\n\n        </div>\n      </div>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isUserLoggedIn()){\n      return true;\n    }\n    this.router.navigate(['login']);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n\n\n  }\n\n}\n","<div class=\"home\">\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../services/auth.service';\nimport { DataService } from '../services/data.service';\nimport { UserService } from '../services/user.service';\nimport { RegisterFormData } from '../types/RegisterFormData';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AuthService,\n    private router: Router,\n    private notification: ToastrService,\n    private translate: TranslateService,\n    private userService: UserService\n      ) {\n    const browserLang = translate.getDefaultLang() || 'en';\n    translate.use(browserLang.match(/en|de/) ? browserLang : 'en');\n\n  }\n\n\n  ngOnInit(): void {\n    this.loginForm = this.createLoginForm();\n    this.userService.getUserDetails();\n  }\n\n  get loginFormControl() {\n    return this.loginForm.controls;\n  }\n\n  createLoginForm(): FormGroup {\n    return this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n  }\n\n  login(username, password) {\n    let user=this.auth.authenticate(username, password);\n    if (user) {\n      this.notification.success('', 'Login success', { timeOut: 1000 });\n      if (user.profession==='Admin') {\n        this.router.navigate(['dashboard']);\n      }\n      else {\n        this.router.navigate(['dashboard-student']);\n      }\n    }\n    else {\n      this.notification.error('', 'Login failed', { timeOut: 1000 });\n    }\n\n  }\n\n  onSubmit() {\n    this.login(this.loginForm.value.username, this.loginForm.value.password);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-md-8 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-header text-center\">\n              <h3>{{'login.title'|translate}}</h3>\n            </div>\n            <div class=\"card-body\" >\n              <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                  <label>{{'login.username'|translate}}</label>\n                  <input type=\"text\" class=\"form-control\" formControlName=\"username\">\n                  <span class=\"text-danger\"\n                  *ngIf=\"loginFormControl.username.touched && loginFormControl.username.errors?.required\">\n                  {{'login.usernamerequired'|translate}}\n                </span>\n                </div>\n                <div class=\"form-group\">\n                  <label>{{'login.password'|translate}}</label>\n                  <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n                  <span class=\"text-danger\"\n                  *ngIf=\"loginFormControl.password.touched && loginFormControl.password.errors?.required\">\n                  {{'login.passwordrequired'|translate}}\n                </span>\n                </div>\n                <div class=\"form-group\">\n                  <button class=\"btn btn-danger btn-block\" [disabled]=\"loginForm.invalid\">{{'login.submit'|translate  }}</button>\n                </div>\n\n              </form>\n            </div>\n\n        </div>\n      </div>\n  </div>\n</div>\n\n\n\n","import { ThrowStmt } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { DataService } from '../services/data.service';\nimport { UserService } from '../services/user.service';\nimport { ValidationsService } from '../services/validations.service';\n\n@Component({\n  selector: 'app-input-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private customValidator: ValidationsService,\n    private dataServce: DataService,\n    private tstr: ToastrService,\n    private userService: UserService\n  ) { }\n  professions: string[] = [\n    'Admin',\n    'Student'\n  ];\n\n  ngOnInit(): void {\n    this.registerForm = this.createRegisterForm();\n    this.userService.getUserDetails();\n  }\n  get registerFormControl() {\n    return this.registerForm.controls;\n  }\n\n  saveToService() {\n    this.dataServce.registerForm = this.registerForm;\n  }\n\n  createRegisterForm(): FormGroup {\n    return this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', [Validators.required]],\n      mobile: ['', [Validators.required, Validators.pattern('^((\\\\+91-?)|0)?[0-9]{10}$')]],\n      password: ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      confirmPassword: ['', [Validators.required]],\n      profession: ['', [Validators.required]]\n    },\n      {\n        validator: this.customValidator.MatchPassword('password', 'confirmPassword'),\n      });\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.dataServce.setFormData(this.registerForm.value);\n\n      this.userService.registerUser(this.registerForm.value);\n    }\n\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n      <div class=\"col-md-8 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-header text-center\">\n              <h3>{{'register.title'|translate}}</h3>\n           </div>\n          <div class=\"card-body\">\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n              <label>{{'register.name'|translate}}</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n              <span class=\"text-danger\"\n              *ngIf=\"registerFormControl.name.touched && registerFormControl.name.errors?.required\">\n              {{'register.namerequirederror'|translate}}\n            </span>\n            </div>\n            <div class=\"form-group\">\n              <label>{{'register.email'|translate}}</label>\n              <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n              <span class=\"text-danger\"\n                                          *ngIf=\"registerFormControl.email.touched  && registerFormControl.email.errors?.required\">\n                                          <!-- Email is required -->\n                                          {{'register.emailrequirederror'|translate}}\n                                      </span>\n            <span class=\"text-danger\"\n            *ngIf=\"registerFormControl.email.touched && registerFormControl.email.errors?.email\">\n            <!-- Enter a valid email address -->\n            {{'register.invalidemailerror'|translate}}\n            </span>\n            </div>\n\n            <div class=\"form-group\">\n              <label>{{'register.username'|translate}}</label>\n              <input type=\"username\" class=\"form-control\" formControlName=\"username\">\n              <span class=\"text-danger\"\n              *ngIf=\"registerFormControl.username.touched && registerFormControl.username.errors?.required\">\n              <!-- Username ís required -->\n              {{'register.usernamerequirederror'|translate}}\n              </span>\n            </div>\n\n            <div class=\"form-group\">\n              <label>{{'register.mobile'|translate}}</label>\n              <input type=\"mobile\" class=\"form-control\" formControlName=\"mobile\">\n              <span class=\"text-danger\"\n              *ngIf=\"registerFormControl.mobile.touched && registerFormControl.mobile.errors?.required\">\n              <!-- Mobile ís required -->\n              {{'register.mobilerequirederror'|translate}}\n              </span>\n              <span class=\"text-danger\"\n              *ngIf=\"registerFormControl.mobile.touched && registerFormControl.mobile.errors?.pattern\">\n              <!-- Enter a valid mobile number -->\n              {{'register.invalidmobileerror'|translate}}\n              </span>\n            </div>\n\n\n            <div class=\"form-group\">\n              <label>{{'register.password'|translate}}</label>\n              <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n              <span class=\"text-danger\"\n                                          *ngIf=\"(registerFormControl.password.touched ) && registerFormControl.password.errors?.required\">\n                                          <!-- Password is required -->\n                                          {{'register.passwordrequirederror'|translate}}\n                                      </span>\n                                      <span class=\"text-danger\"\n                                          *ngIf=\"registerFormControl.password.touched && registerFormControl.password.errors?.invalidPassword\">\n                                          <!-- Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n                                          letter and 1 number\n                                           -->\n                                           {{'register.invalidpassworderror'|translate}}\n                                        </span>\n          </div>\n\n            <div class=\"form-group\">\n              <label>{{'register.confirmPassword'|translate}}</label>\n              <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\n                                      <span class=\"text-danger\"\n                                          *ngIf=\"(registerFormControl.confirmPassword.touched )&& registerFormControl.confirmPassword.errors?.required\">\n                                          <!-- Confirm Password is required -->\n                                          {{'register.confirmpasswordrequirederror'|translate}}\n                                      </span>\n                                      <span class=\"text-danger\"\n                                          *ngIf=\"registerFormControl.confirmPassword.touched && registerFormControl.confirmPassword.errors?.passwordMismatch\">\n                                          <!-- Passwords does not match -->\n                                          {{'register.passwordmissmatcherror'|translate}}\n                                      </span>\n            </div>\n\n\n          <div class=\"form-group\">\n              <label>{{'register.profession'|translate}}</label>\n              <select class=\"form-control\" formControlName=\"profession\">\n                <option value=\"\" selected>{{'register.selectAnOption'|translate}}</option>\n                <option *ngFor=\"let profession of professions\" [value]=\"profession\">\n                  {{profession}}\n                </option>\n              </select>\n              <span class=\"text-danger\"\n              *ngIf=\"registerFormControl.confirmPassword.touched &&registerFormControl.profession.errors?.required\">\n              <!-- Profession ís required -->\n              {{'register.professionrequirederror'|translate}}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <button class=\"btn btn-danger btn-block\" [disabled]=\"registerForm.invalid\">Submit</button>\n            </div>\n\n          </form>\n          </div>\n        </div>\n      </div>\n\n  </div>\n</div>\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\nimport { Airline } from '../types/airline';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AirlineLoaderService {\n\n  private AIRLINE_BASE_URL = 'https://api.instantwebtools.net/v1/airlines';\n  private isLoad = true;\n  public airlines;\n\n  public getAirlines(){\n    return this.airlines;\n  }\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  loadAirlineData(){\n    console.log('Loading airlines data');\n\n    if (this.isLoad)\n    {\n      this.isLoad = false;\n\n      const $airlineData = this.http.get(this.AIRLINE_BASE_URL).pipe(retry(3)).subscribe(\n        (data) => {\n          console.log('airlines loaded ');\n          this.airlines = data;\n        }\n      );\n\n      return $airlineData;\n    }\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(\n    private userService: UserService\n  ) {\n\n  }\n\n\n  authenticate(username, password):any {\n      const user =  this.userService?.users?.find(user => user.username === username && user.password === password);\n      if (user) {\n         sessionStorage.setItem('username', username);\n         sessionStorage.setItem('profession',user.profession);\n         return user;\n       } else {\n         return false;\n       }\n\n\n  }\n\n  isUserLoggedIn(): boolean {\n    const user = sessionStorage.getItem('username');\n    return !(user === null);\n  }\n\n\n  logOut(): void {\n    sessionStorage.removeItem('username');\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, pipe, Subject } from 'rxjs';\nimport { Airline } from '../types/airline';\nimport { PassengerResponse } from '../types/passengerResponse';\nimport { RegisterFormData } from '../types/RegisterFormData';\nimport { Student } from '../types/student';\nimport { map, retry } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private STUDENT_BASE_URL = './assets/students.json';\n  private PASSENGER_BASE_URL = 'https://api.instantwebtools.net/v1/passenger';\n  private AIRLINE_BASE_URL = 'https://api.instantwebtools.net/v1/airlines';\n\n  registerForm: FormGroup;\n  registerFormData: RegisterFormData;\n  selectedAirline = new Subject();\n  passengers;\n  subject = new Subject();\n  constructor(\n    private http: HttpClient,\n    private tstr: ToastrService,\n    private modalService: NgbModal) {\n    this.registerFormData = {\n      name: '',\n      email: '',\n      mobile: '',\n      username: '',\n      password: '',\n      profession: ''\n    };\n\n  }\n\n  setFormData(values: RegisterFormData) {\n    this.registerFormData.name = values.name;\n    this.registerFormData.email = values.email;\n    this.registerFormData.username = values.username;\n    this.registerFormData.mobile = values.mobile;\n    this.registerFormData.profession = values.profession;\n\n  }\n\n  loadStudentData(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.STUDENT_BASE_URL).pipe(retry(3));\n  }\n\n  loadPassengerData(){\n    console.log('Loading passenger data');\n    return this.http.get<PassengerResponse>(`${this.PASSENGER_BASE_URL}?page=0&size=100`).pipe(retry(3));\n  }\n\n  postPassengerData(passsengerData){\n    return this.http.post(`${this.PASSENGER_BASE_URL}`, passsengerData).subscribe(res => {\n      console.log(res);\n      this.tstr.success('', 'New passenger saved', {timeOut: 1000});\n      this.modalService.dismissAll();\n    }, err => {\n      console.log(err);\n      this.tstr.error('', 'Error, Please retry', {timeOut: 1000});\n    });\n  }\n\n  postAirlineData(airlineData){\n    return this.http.post(`${this.AIRLINE_BASE_URL}`, airlineData).subscribe(res => {\n      console.log(res);\n      this.tstr.success('', 'New airline saved', {timeOut: 1000});\n      this.modalService.dismissAll();\n    }, err => {\n        console.log(err);\n        if (err.error.message === `there is an airline registered under same id you've entered`){\n          this.tstr.error('Please enter a different id', 'Airline already exists', {timeOut: 1000});\n        }\n        else{\n          this.tstr.error('', 'Error, Please retry', {timeOut: 1000});\n        }\n    });\n  }\n\n  updatePassengerData(passengerData, id){\n    console.log(`${this.PASSENGER_BASE_URL}/${id}`, passengerData);\n    return this.http.put(`${this.PASSENGER_BASE_URL}/${id}`, passengerData).subscribe(\n       res => {\n         console.log(res);\n         this.tstr.success('', 'Passenger details updated', {timeOut: 1000});\n         this.modalService.dismissAll();\n         this.subject.next('Passenger|update');\n       },\n       err => {\n        console.log(err);\n        this.tstr.error('', 'Error, Please retry', {timeOut: 1000});\n       }\n     );\n  }\n\n  deletePassenger(id){\n    console.log(`${this.PASSENGER_BASE_URL}/${id}`, id);\n    return this.http.delete(`${this.PASSENGER_BASE_URL}/${id}`)\n    .subscribe(\n      (res) => {\n        console.log(res);\n        this.tstr.success('', 'Passenger deleted', {timeOut: 1000});\n        this.subject.next('Passenger|delete');\n\n      },\n       (err) => {\n        console.log(err);\n        this.tstr.error('', 'Error, Please retry', {timeOut: 1000});\n       }\n    );\n\n  }\n\n\n\n}\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\nimport { RegisterFormData } from '../types/RegisterFormData';\nimport * as FileSaver from 'file-saver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private USER_BASE_URL = 'https://6242e274d126926d0c58f063.mockapi.io/api122121/users';\n  users:RegisterFormData[]=[{name:'admin',email:'admin@gmail.com',mobile:'0000000000',password:'admin',profession:'Admin',username:'admin'},\n                            {name:'student',email:'student@gmail.com',mobile:'0000000000',password:'student',profession:'Student',username:'student'}] ;\n  constructor(\n    private http: HttpClient,\n    private tstr: ToastrService,\n    private router: Router\n  ) {\n  }\n\n  registerUser(registerFormData:RegisterFormData){\n    const userData = {\n      name: registerFormData.name,\n      email: registerFormData.email,\n      username: registerFormData.username,\n      password: registerFormData.password,\n      profession: registerFormData.profession,\n      mobile:registerFormData.mobile\n    };\n    if (this.checkIfDuplicateUser(this.users,userData)){\n      this.tstr.error('Provide unique username and email', 'User already exists.', {timeOut: 1000});\n    }\n    else{\n      this.http.post(`${this.USER_BASE_URL}`, userData).subscribe(res => {\n        this.tstr.success('', 'New user created', {timeOut: 1000});\n        this.saveToFile(userData);\n        this.router.navigate(['display']);\n\n      },\n      err => {\n        this.tstr.error('', 'Registration failed', {timeOut: 1000});\n        console.log(err);\n      });\n    }\n\n  }\n  checkIfDuplicateUser(users,userData){\n   return users.find(x => x.username === userData.username || x.email === userData.email);\n  }\n\n\n  getUserDetails(){\n    return this.http.get<RegisterFormData[]>(`${this.USER_BASE_URL}`).pipe(retry(3)).subscribe(res => {\n      res.push({name:'admin',email:'admin@gmail.com',mobile:'0000000000',password:'admin',profession:'Admin',username:'admin'},\n               {name:'student',email:'student@gmail.com',mobile:'0000000000',password:'student',profession:'Student',username:'student'});\n      console.log(res);\n       this.users = res;\n      },\n     err => {\n       console.log(err);\n       return err;\n     });\n  }\n\n  saveToFile(userData) {\n    const data =\n      '\\r Name: ' + userData.name + ' \\r\\n ' +\n      'Email: ' + userData.email + ' \\r\\n ' +\n      'Username: ' + userData.username + ' \\r\\n ' +\n      'Mobile: ' + userData.mobile + ' \\r\\n ' +\n      'Profession: ' + userData.profession;\n\n    FileSaver.saveAs(new Blob([data], { type: 'text/plain;charset=utf-8' }), 'data.txt', { autoBom: false });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, FormGroup, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationsService {\n\n  constructor() { }\n\n  patternValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!control.value) {\n        return null;\n      }\n      const regex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$');\n      const valid = regex.test(control.value);\n      return valid ? null : { invalidPassword: true };\n    };\n  }\n\n  MatchPassword(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (confirmPasswordControl.errors && !confirmPasswordControl.errors.passwordMismatch) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n      } else {\n        confirmPasswordControl.setErrors(null);\n      }\n    };\n  }\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-contact-us-page',\n  templateUrl: './contact-us-page.component.html',\n  styleUrls: ['./contact-us-page.component.css']\n})\nexport class ContactUsPageComponent implements OnInit {\n\n  ContactusForm: FormGroup;\n\n  constructor(\n    private fb:FormBuilder,\n    private tstr:ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.ContactusForm=this.createContactUsForm();\n  }\n  createContactUsForm(){\n    return this.fb.group({\n      email:['',[Validators.required,Validators.email]],\n      name:['',[Validators.required]],\n      message:['',[Validators.required]]\n    })\n  }\n  get ContactusFormControl() {\n    return this.ContactusForm.controls;\n  }\n\n\n  onSubmit(){\n    this.tstr.success('','Message sent successfully',{timeOut:1000})\n    this.ContactusForm.reset();\n\n  }\n\n\n}\n","  <div class=\"main\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-8 mx-auto\">\n          <br> <br>\n            <div class=\"card\">\n              <div class=\"card-header text-center\">\n                <h3>Contact Us</h3>\n              </div>\n              <div class=\"card-body \">\n                <form #form class=\"form-group\" [formGroup]=\"ContactusForm\"  action=\"https://formspree.io/f/mjvlalgj\"\n                method=\"POST\"  (ngSubmit)=\"onSubmit()\">\n                  <div class=\"form-group\">\n                    <label>Email:</label>\n                    <input type=\"text\" class=\"form-control\"  formControlName=\"email\" name=\"email\">\n                    <span class=\"text-danger\"\n                    *ngIf=\"ContactusFormControl.email.touched && ContactusFormControl.email.errors?.required\">\n                      Email is required\n                    </span>\n                    <span class=\"text-danger\"\n                    *ngIf=\"ContactusFormControl.email.touched && ContactusFormControl.email.errors?.email\">\n                    <!-- Enter a valid email address -->\n                      Enter a valid email\n                    </span>\n                  </div>\n                  <div class=\"form-group\">\n                    <label>Name:</label>\n                    <input type=\"text\" class=\"form-control\" formControlName=\"name\" name=\"name\">\n                    <span class=\"text-danger\"\n                    *ngIf=\"ContactusFormControl.name.touched && ContactusFormControl.name.errors?.required\">\n                      Name is required\n                    </span>\n                  </div>\n                  <div class=\"form-group\">\n                    <label>Message:</label>\n                    <textarea name=\"message\" class=\"form-control\" formControlName=\"message\" name=\"message\"></textarea>\n                    <span class=\"text-danger\"\n                    *ngIf=\"ContactusFormControl.message.touched && ContactusFormControl.message.errors?.required\">\n                      Message is required\n                    </span>\n\n                  </div>\n                  <button class=\"btn btn-danger btn-block\" (click)=\"form.submit()\"  type=\"submit\" [disabled]=\"ContactusForm.invalid\">Submit</button>\n               </form>\n              </div>\n\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"page-footer font-small blue \">\n\n  <!-- Copyright -->\n  <div class=\"footer-copyright text-center py-3\">© 2022 Copyright:\n    <a> DummyFooter</a>   <br>\n    <a routerLink=\"contact-us\">Contact Us</a>\n\n  </div>\n\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->\n","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DataService } from 'src/app/services/data.service';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, DoCheck {\n\n  loggedin = false;\n  isAdmin = false;\n  user;\n  lang;\n  opened=false;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private tstr: ToastrService,\n    public translate: TranslateService) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngDoCheck(): void {\n      this.auth.isUserLoggedIn() ?\n      this.loggedin = true : this.loggedin = false;\n      this.isUserAdmin();\n      this.user=sessionStorage.getItem('username');\n\n    }\n\n  changeLang(lang) {\n    this.translate.setDefaultLang(lang);\n    this.translate.use(lang.match(/de|en/) ? lang : 'en');\n    this.lang = lang;\n  }\n\n  isUserAdmin(){\n    if (sessionStorage.getItem('profession')==='Admin'){\n      this.isAdmin = true;\n    }\n    else{\n      this.isAdmin = false;\n    }\n\n  }\n\n  logout() {\n    this.auth.logOut();\n    this.loggedin = false;\n    this.tstr.success('', 'Logged out', { timeOut: 1000 });\n    this.router.navigate(['login']);\n\n  }\n\n  toggleSidebar(){\n    this.opened=!this.opened;\n\n  }\n\n   openNav() {\n    document.getElementById(\"mySidebar\").style.width = \"250px\";\n  }\n\n  /* Set the width of the sidebar to 0 and the left margin of the page content to 0 */\n   closeNav() {\n    document.getElementById(\"mySidebar\").style.width = \"0\";\n  }\n\n\n}\n","\n\n\n\n<nav class=\"navbar navbar-expand-lg navbar-light\" style=\"background-color:#abc4ff;\">\n\n\n  <i class=\"pi pi-bars\" (click)=\"openNav()\" style=\"margin-right: 10px;\"></i>\n\n  <a class=\"navbar-brand\" routerLink=\"\">Flight Booking</a> <span *ngIf=\"user\">Hi, {{user}}</span>\n\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item \" *ngIf=\"(isAdmin&&loggedin)\">\n        <a class=\"nav-link\" routerLinkActive=\"['active']\"  routerLink=\"/dashboard\" >{{'header.passenger'|translate}}</a>\n      </li>\n      <li class=\"nav-item \" *ngIf=\"(isAdmin&&loggedin)\">\n        <a class=\"nav-link\" routerLinkActive=\"['active']\"  routerLink=\"/airline\">{{'header.airline'|translate}}</a>\n      </li>\n      <li>\n        <select class=\"custom-select\" (change)=\"changeLang($event.target.value)\">\n          <option value=\"en\" [selected]=\"lang=='en'\">English</option>\n          <option value=\"de\" [selected]=\"lang=='de'\">Deutsch</option>\n        </select>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!loggedin\">\n        <a class=\"nav-link\" routerLinkActive=\"['active']\" routerLink=\"/input\">{{'header.register'|translate}}</a>\n      </li>\n      <li class=\"nav-item \" *ngIf=\"!loggedin\">\n        <a class=\"nav-link\" routerLinkActive=\"['active']\" routerLink=\"/login\">{{'header.login'|translate}}</a>\n      </li>\n      <li class=\"nav-item \" *ngIf=\"loggedin\">\n        <a class=\"nav-link\" routerLinkActive=\"['active']\" (click)=\"logout()\">{{'header.logout'|translate}}</a>\n      </li>\n\n\n    </ul>\n  </div>\n</nav>\n\n\n\n\n\n  <div id=\"mySidebar\" class=\"sidebar\">\n    <a href=\"javascript:void(0)\" class=\"closebtn\" (click)=\"closeNav()\">&times;</a>\n    <ul class=\"list-unstyled components\">\n      <!--<p>Dummy Heading</p>-->\n      <li>\n      <a (click)=\"closeNav()\" routerLink=\"contact-us\">Contact Us</a>\n      </li>\n      <li  (click)=\"closeNav()\"  *ngIf=\"!loggedin\">\n        <a   (click)=\"closeNav()\" routerLinkActive=\"['active']\" routerLink=\"/input\">{{'header.register'|translate}}</a>\n      </li>\n      <li  *ngIf=\"!loggedin\">\n        <a (click)=\"closeNav()\"   routerLinkActive=\"['active']\" routerLink=\"/login\">{{'header.login'|translate}}</a>\n      </li>\n      <li  *ngIf=\"loggedin\">\n        <a  (click)=\"closeNav()\"  routerLinkActive=\"['active']\" (click)=\"logout()\">{{'header.logout'|translate}}</a>\n      </li>\n      <li class=\"active\">\n          <a href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\">Home</a>\n          <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\">\n              <li><a href=\"#\">Home 1</a></li>\n              <li class=\"active\"><a href=\"#\">Home 2</a></li>\n              <li><a href=\"#\">Home 3</a></li>\n          </ul>\n      </li>\n      <li>\n          <a href=\"#\">About</a>\n          <a href=\"#pageSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\">Pages</a>\n          <ul class=\"collapse list-unstyled\" id=\"pageSubmenu\">\n              <li><a href=\"#\">Page 1</a></li>\n              <li><a href=\"#\">Page 2</a></li>\n              <li><a href=\"#\">Page 3</a></li>\n          </ul>\n      </li>\n      <li>\n          <a href=\"#\">Portfolio</a>\n      </li>\n      <li>\n          <a href=\"#\">Contact</a>\n      </li>\n  </ul>\n\n\n  </div>\n\n\n\n","export class FlightSchedule {\r\n  id:string;\r\n  airlineName:string;\r\n  iata:string;\r\n  icao:string;\r\n  country:string;\r\n  active:string;\r\n  totalPassengers?:string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}